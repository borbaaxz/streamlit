import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm, poisson
from pathlib import Path

# Configura√ß√£o do layout
st.set_page_config(page_title="CP-01-Gabriel-Borba", layout="wide")

# Sidebar para navega√ß√£o
st.sidebar.title("Navega√ß√£o")
aba = st.sidebar.radio("Escolha uma p√°gina:", ["Home", "Forma√ß√£o e Experi√™ncia", "Skills", "An√°lise de Dados"])

# ---- HOME ----
if aba == "Home":
    st.title("\U0001F44B Bem-vindo ao Meu Dashboard Profissional")
    
    # Foto de Perfil
    if Path("foto.jpg").exists():
        st.image("foto.jpg", width=300, caption="Gabriel Borba")
    else:
        st.warning("Imagem de perfil n√£o encontrada.")
    
    st.write("""
    Ol√°! Meu nome √© **Gabriel Borba** e sou estudante de **Engenharia de Software na FIAP**.
    Tenho grande interesse em **An√°lise de Dados** e **Desenvolvimento Web**, sempre buscando aprimorar minhas habilidades e aplicar tecnologia de forma inovadora.
    
    Este dashboard foi criado para apresentar meu perfil profissional, destacando minha forma√ß√£o, certifica√ß√µes, projetos e habilidades.
    Al√©m disso, trago uma an√°lise de dados aplicada a um problema real de mercado, utilizando t√©cnicas estat√≠sticas e visuais interativos.
    
    Explore as abas para conhecer mais sobre minha trajet√≥ria e minhas compet√™ncias! üöÄüìä
    """)
    
    # Bot√µes para LinkedIn e GitHub
    col1, col2 = st.columns(2)
    with col1:
        st.markdown(
            '<a href="https://www.linkedin.com/in/gabriel-borba-b79777292/" target="_blank">'
            '<button style="background-color:#0077b5;color:white;padding:10px 20px;border:none;border-radius:5px;font-size:16px;cursor:pointer;">'
            'üîó LinkedIn</button></a>', unsafe_allow_html=True
        )
    with col2:
        st.markdown(
            '<a href="https://github.com/borbaaxz" target="_blank">'
            '<button style="background-color:#24292e;color:white;padding:10px 20px;border:none;border-radius:5px;font-size:16px;cursor:pointer;">'
            'üêô GitHub</button></a>', unsafe_allow_html=True
        )
    
    # Bot√£o para Download do Curr√≠culo
    st.markdown("---")
    st.subheader("üìÑ Baixe meu curr√≠culo")
    
    with open("curriculo.pdf", "rb") as file:
        st.download_button(
            label="üì• Download Curr√≠culo",
            data=file,
            file_name="Gabriel_Borba_Curriculo.pdf",
            mime="application/pdf"
        )

# ---- FORMA√á√ÉO E EXPERI√äNCIA ----
elif aba == "Forma√ß√£o e Experi√™ncia":
    st.title("üìö Forma√ß√£o Acad√™mica e Experi√™ncia")
    
    st.subheader("üéì Forma√ß√£o Acad√™mica")
    st.write("""
    - **Engenharia de Software** - FIAP (2024 - 2027)
      - Foco em desenvolvimento de software, an√°lise de dados, intelig√™ncia artificial e gest√£o de projetos.
    """)
    
    st.subheader("üìú Certifica√ß√µes")
    st.write("""
    - Gest√£o Financeira de Empresas - FIAP  
    - An√°lise de Dados com Python  
    - Gest√£o √Ågil e Design Thinking - FIAP  
    - Cybersecurity Fundamentals - FIAP  
    """)
    
    st.subheader("üíº Experi√™ncia Profissional e Projetos")
    st.write("""
    - **Desenvolvimento de um Site Institucional para o Hospital das Cl√≠nicas**  
      - Projeto acad√™mico em parceria com o hospital, focado na acessibilidade e experi√™ncia do usu√°rio.  

    - **Sistema de Gest√£o √Ågil para Projeto Liter√°rio**  
      - Cria√ß√£o de um sistema baseado no Trello para gerenciar um livro de fic√ß√£o cient√≠fica.  

    - **Dashboard Profissional Interativo (Projeto CP1 - FIAP)**  
      - Desenvolvimento de um dashboard utilizando Streamlit e Python para an√°lise de dados e apresenta√ß√£o de perfil profissional.  
    """)

# ---- SKILLS ----
elif aba == "Skills":
    st.title("üõ†Ô∏è Minhas Skills")
    st.write("Abaixo est√£o algumas das minhas principais habilidades e o n√≠vel de profici√™ncia em cada uma:")
    
    skills = {
        "Python": 90,
        "JavaScript": 85,
        "React": 80,
        "SQL": 75,
        "Power BI": 70,
        "Git": 90,
        "Excel": 80,
        "Streamlit": 85,
        "Tailwind": 70,
    }
    
    for skill, level in skills.items():
        st.markdown(f"**{skill}**")
        st.progress(level / 100)

# ---- AN√ÅLISE DE DADOS ----
elif aba == "An√°lise de Dados":
    st.title("üìä An√°lise de Dados Aplicada")
    
    # Caminho do arquivo Excel
    excel_path = "wholesale-trade-survey-december-2024-quarter.xlsx"
    
    # Verifica se o arquivo existe antes de carregar
    if Path(excel_path).exists():
        df = pd.read_excel(excel_path)
        st.write("### üìå Dados Carregados")
        st.dataframe(df.head())
        
        # Exibi√ß√£o dos tipos de dados das colunas para diagn√≥stico
        st.write("### Tipos de dados das colunas:")
        st.write(df.dtypes)

        # Resumo estat√≠stico dos dados
        st.write("### Resumo Estat√≠stico")
        st.write(df.describe())

        # Tenta for√ßar a convers√£o de colunas num√©ricas
        df = df.apply(pd.to_numeric, errors='coerce')

        # Filtra as colunas num√©ricas
        col_numericas = df.select_dtypes(include=[np.number]).columns

        # Verifica se existem colunas num√©ricas
        if not col_numericas.empty:
            # 1. **Matriz de Correla√ß√£o**
            st.subheader("1. Correla√ß√£o entre as vari√°veis num√©ricas")
            correlation_matrix = df[col_numericas].corr()
            st.write("Matriz de correla√ß√£o:")
            st.dataframe(correlation_matrix)

            plt.figure(figsize=(10, 6))
            sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
            plt.title("Matriz de Correla√ß√£o")  # T√≠tulo para a heatmap
            st.pyplot(plt)

            # 2. **Distribui√ß√£o Normal**
            st.subheader("2. Distribui√ß√£o Normal de uma vari√°vel num√©rica")
            var = col_numericas[0]  # Pegando a primeira coluna num√©rica
            mean_val = df[var].mean()
            std_val = df[var].std()

            x = np.linspace(df[var].min(), df[var].max(), 100)
            p_normal = norm.pdf(x, mean_val, std_val)
            plt.figure(figsize=(10, 5))
            plt.plot(x, p_normal, 'k', linewidth=2)
            plt.title(f"Distribui√ß√£o Normal de {var}")  # T√≠tulo para o gr√°fico
            plt.xlabel(var)
            plt.ylabel("Densidade de Probabilidade")
            st.pyplot(plt)

            # 3. **Distribui√ß√£o Poisson**
            st.subheader("3. Distribui√ß√£o Poisson de uma vari√°vel num√©rica")
            lambda_poisson = df[var].mean()
            p_poisson = poisson.pmf(np.arange(0, 15), lambda_poisson)
            plt.figure(figsize=(10, 5))
            plt.bar(np.arange(0, 15), p_poisson, color='orange')
            plt.title(f"Distribui√ß√£o Poisson de {var}")  # T√≠tulo para o gr√°fico
            plt.xlabel(var)
            plt.ylabel("Probabilidade")
            st.pyplot(plt)

            # 4. **An√°lise de Outliers**
            st.subheader("4. An√°lise de Outliers")
            st.write("Verificando outliers para as colunas num√©ricas utilizando o boxplot.")
            plt.figure(figsize=(10, 6))
            sns.boxplot(data=df[col_numericas])
            plt.title("An√°lise de Outliers nas Vari√°veis Num√©ricas")
            st.pyplot(plt)

            # 5. **Insights sobre os Dados**
            st.subheader("5. Insights sobre os Dados")
            st.write("""
            - A partir da an√°lise de correla√ß√£o, podemos observar quais vari√°veis t√™m rela√ß√µes fortes ou fracas entre si.
            - A distribui√ß√£o normal √© uma boa forma de verificar a normalidade de uma vari√°vel. Se os dados seguem uma forma de sino, isso pode indicar normalidade.
            - A distribui√ß√£o Poisson √© √∫til para modelar eventos que ocorrem em intervalos de tempo fixos. Se a vari√°vel seguir esse padr√£o, podemos us√°-la para prever a probabilidade de ocorr√™ncia de certos eventos.
            - A an√°lise de outliers com o boxplot ajuda a identificar valores que se distanciam significativamente da m√©dia, o que pode ser importante para compreender a variabilidade dos dados.
            """)

        else:
            st.warning("N√£o h√° colunas num√©ricas suficientes para calcular a correla√ß√£o. Verifique os tipos de dados das colunas.")
    else:
        st.error(f"Arquivo **{excel_path}** n√£o encontrado. Certifique-se de que o arquivo est√° na mesma pasta do c√≥digo.")

#  üîπ 3. Executando o Dashboard
# No terminal, rode:  
# pip install streamlit pandas numpy matplotlib seaborn scipy
# ```sh
# streamlit run dashboard.py
# pip install openpyxl
#pip install streamlit pandas numpy matplotlib seaborn scipy openpyxl
